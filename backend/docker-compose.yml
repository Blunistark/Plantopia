version: '3.8'

services:
  plantopia-backend:
    build: .
    container_name: plantopia-api
    ports:
      - "5000:5000"
    environment:
      - OPENTOPO_API_KEY=${OPENTOPO_API_KEY}
      - FLASK_ENV=production
      # PostgreSQL connection
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@plantopia-postgres:5432/${POSTGRES_DB}
      # n8n Integration
      - N8N_BASE_URL=http://n8n-main:5678
      - N8N_WEBHOOK_AI_CHAT=${N8N_WEBHOOK_AI_CHAT}
      - N8N_WEBHOOK_DATA_FETCH=${N8N_WEBHOOK_DATA_FETCH}
      - N8N_TIMEOUT=${N8N_TIMEOUT:-30000}
    volumes:
      - ./temp:/app/temp
      - ./cache:/app/cache
    networks:
      - plantopia-network
      - shared-apps-network
    depends_on:
      plantopia-postgres:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  plantopia-postgres:
    image: pgvector/pgvector:pg15
    container_name: plantopia-postgres
    restart: unless-stopped
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - PGDATA=/var/lib/postgresql/data/pgdata
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - plantopia-network
      - shared-apps-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

volumes:
  postgres_data:
    driver: local

networks:
  plantopia-network:
    driver: bridge
  shared-apps-network:
    external: true
    name: n8n-central_shared-apps-network
